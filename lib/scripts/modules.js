#!/usr/bin/env node

/**
 * External dependencies
 */
import fs from 'fs';
import path from 'path';
import { optimize, loadConfig } from 'svgo';
import { parseSync } from 'svgson';
import { fileURLToPath } from 'url';

// Constants
const srcPath = path.join(process.cwd(), 'src');
const modulesPath = path.join(srcPath, 'modules');
const moduleNames = fs.readdirSync(modulesPath, {withFileTypes: true} ).filter( Dirent => Dirent.isDirectory()  ).map( Dirent => Dirent.name ) ;

// icon index file content
let indexContent = [
     `// Autogenerated file, do not edit directly\n`, // comment
     `\n// WordPress Dependencies.`, // comment
    `\nimport { addAction, addFilter } from '@wordpress/hooks';\n`, // import statement
    `\n// Divi Dependencies.\n`, // comment
    `import { registerModule } from '@divi/module-library';\n\n`, // import statement
     `// Modules.\n`, // comment
];

let moduleRegistration = [];

// loop through modules names
moduleNames.forEach( (module) => { 
     // uppercase the first letter of each word and remove the dashes and underscores.
     let importName = module.replaceAll(/[-_]([\w]{1})/g, (m, g) => g.toUpperCase())
     importName = importName.charAt(0).toUpperCase() + importName.slice(1);

    // add the import to the index file
    indexContent.push( `import { CAWeb${importName}Module } from './${module}';\n` );
    moduleRegistration.push( `\tregisterModule( CAWeb${importName}Module.metadata, CAWeb${importName}Module );\n` );
});

// add additional filters/actions to the index file
indexContent = indexContent.concat(
     [
          `\n// Register modules.\n`, // comment
          `addAction('divi.moduleLibrary.registerModuleLibraryStore.after', 'caweb.registerModuleLibraryStore', () => {\n`, // add action to register module library store
          moduleRegistration.join(''), // register modules
          `});\n`, // close action
     ]
);

// write the modules index.ts file
fs.writeFileSync(
     path.join( modulesPath, 'index.ts' ),
     indexContent.join( '' )
);
